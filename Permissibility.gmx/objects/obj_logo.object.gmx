<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup variables

//Freeze animation to first frame
image_speed = 0;

//Alpha
alpha_seconds = 0;
alpha_seconds_max = 40/60;
alpha = 0;

deliberate_wait_seconds = 0;
seconds_passed_since = 0;
seconds_passed_since_two = 0;


rect_color = make_colour_rgb(220, 226, 234);
rect_seconds = 0;
rect_max_seconds = 30/60;
rect_delta_x_max = room_width/2;
rect_delta_y_max = room_height/2;
rect_delta_x = 0;
rect_delta_y = 0;
rect_x = room_width/2;
rect_y = room_height/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate
var seconds_passed = global.seconds_passed

if (deliberate_wait_seconds &lt; 0.8) {
    deliberate_wait_seconds += seconds_passed;
    exit;
}

if (rect_seconds &lt; rect_max_seconds) {
    rect_seconds += seconds_passed;
    rect_seconds = min(rect_seconds, rect_max_seconds);
    rect_delta_x = scr_ease_out_cubic(rect_seconds, 0, rect_delta_x_max, rect_max_seconds);
    rect_delta_y = scr_ease_out_cubic(rect_seconds, 0, rect_delta_y_max, rect_max_seconds);
    exit;
}

if (seconds_passed_since &lt;= 0.3){
    seconds_passed_since += seconds_passed;
    exit;
}


if (alpha_seconds &lt; 1) {
    alpha_seconds += seconds_passed;
    alpha = scr_linear_tween(alpha_seconds, 0, 1, alpha_seconds_max);
}

seconds_passed_since_two += seconds_passed;

if (seconds_passed_since_two &gt;= 2){
    room_goto(rm_menu);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw rect and sprite

scr_draw_col_alph(rect_color, 1);
draw_rectangle(rect_x - rect_delta_x, rect_y - rect_delta_y, rect_x + rect_delta_x, rect_y + rect_delta_y, false);

if (alpha_seconds != 0) {
    draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, c_white, alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

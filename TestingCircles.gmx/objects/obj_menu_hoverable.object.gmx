<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_calc_icon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up frames and necessary vars

current_frame = 0;
max_frame = room_speed * 0.25;
appear = true;

alpha = 0;
final_y = y;

hovered = false;
current_hover_frame = 0;
max_hover_frame = room_speed * 0.75
alpha_bar = 0.4;
rect_width = 0;

masking_surface = surface_create(64 * 2, 24);

name = "untitled";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increment frame when necessary

if (current_frame != max_frame &amp;&amp; appear){
    // Welp I'm repeating some tones of code.
    current_frame = clamp(current_frame + 1, 0, max_frame);
    alpha = linear_tween(current_frame, 0, 1, max_frame);
    y = ease_out_cubic(current_frame, final_y - 10, 10, max_frame);
}

if (current_frame != 0 &amp;&amp; !appear){
    current_frame = clamp(current_frame - 1, 0, max_frame);
    alpha = linear_tween(current_frame, 0, 1, max_frame);
    y = ease_in_cubic(current_frame, final_y - 10, 10, max_frame);
}

// If mouse is hovering or not
in_region = point_in_rectangle(mouse_x, mouse_y, x - 64, y - 64, x + 64, y + 64);
hovered = in_region;

if (hovered) {
    current_hover_frame = clamp(current_hover_frame + 1, 0, max_hover_frame);
    rect_width = ease_out_cubic(current_hover_frame, 0, 64 * 2, max_hover_frame);
    alpha_bar = linear_tween(current_hover_frame, 0.4, 0.6, max_hover_frame);
}

if (!hovered) {
    current_hover_frame = clamp(current_hover_frame - 1, 0, max_hover_frame);
    rect_width = ease_out_cubic(current_hover_frame, 0, 64 * 2, max_hover_frame);
    alpha_bar = linear_tween(current_hover_frame, 0.4, 0.6, max_hover_frame);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw label

draw_set_colour(c_white);
draw_set_alpha(alpha_bar);
if (!surface_exists(masking_surface)) {
    masking_surface = surface_create(64 * 2, 24);
}

if (current_hover_frame &gt; 0) {
    draw_rectangle(x - 64, y + 64 + 24 - 2, x - 64 + rect_width, y + 64 + 24 + 20 + 2, false);
    
    surface_set_target(masking_surface);
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
    draw_set_colour(c_black);
    draw_text_transformed(5,13, name, 1, 1, 0);
    
    draw_set_blend_mode(bm_subtract);
    draw_set_colour(c_black);
    draw_rectangle(0 + rect_width, 0, 64 * 2, 24, false);
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    draw_surface(masking_surface, x - 64, y + 64 + 24 - 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
